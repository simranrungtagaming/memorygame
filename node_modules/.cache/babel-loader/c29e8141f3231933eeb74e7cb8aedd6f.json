{"ast":null,"code":"export var MAX_PAIRS=10;export function generateCardSet(numPairs){//\n// Generate a set of cards with image pairs\n//\nvar cards=[];var id=1;for(var i=1;i<=numPairs;i++){var card1={id:id,image:i,imageUp:false,matched:false};id++;var card2={id:id,image:i,imageUp:false,matched:false};cards.push(card1);cards.push(card2);id++;}return cards;};export function getCard(id,cards){return cards.find(function(c){return c.id===id;});}export function cardsHaveIdenticalImages(id1,id2,cards){if(getCard(id1,cards).image===getCard(id2,cards).image){return true;}else{return false;}}","map":{"version":3,"sources":["E:/CodingProjects/game/react-redux-memory-game-master/src/cardFunctions.js"],"names":["MAX_PAIRS","generateCardSet","numPairs","cards","id","i","card1","image","imageUp","matched","card2","push","getCard","find","c","cardsHaveIdenticalImages","id1","id2"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,SAAS,CAAG,EAAlB,CAEP,MAAO,SAASC,CAAAA,eAAT,CAAyBC,QAAzB,CAAmC,CACtC;AACA;AACA;AACA,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,GAAIC,CAAAA,EAAE,CAAG,CAAT,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIH,QAArB,CAA+BG,CAAC,EAAhC,CAAoC,CAChC,GAAMC,CAAAA,KAAK,CAAG,CACVF,EAAE,CAAEA,EADM,CAEVG,KAAK,CAAEF,CAFG,CAGVG,OAAO,CAAE,KAHC,CAIVC,OAAO,CAAE,KAJC,CAAd,CAMAL,EAAE,GACF,GAAMM,CAAAA,KAAK,CAAG,CACVN,EAAE,CAAEA,EADM,CAEVG,KAAK,CAAEF,CAFG,CAGVG,OAAO,CAAE,KAHC,CAIVC,OAAO,CAAE,KAJC,CAAd,CAMAN,KAAK,CAACQ,IAAN,CAAWL,KAAX,EACAH,KAAK,CAACQ,IAAN,CAAWD,KAAX,EACAN,EAAE,GACL,CAED,MAAOD,CAAAA,KAAP,CACH,EAED,MAAO,SAASS,CAAAA,OAAT,CAAiBR,EAAjB,CAAqBD,KAArB,CAA4B,CAC/B,MAAOA,CAAAA,KAAK,CAACU,IAAN,CAAW,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACV,EAAF,GAASA,EAAb,EAAZ,CAAP,CACH,CAED,MAAO,SAASW,CAAAA,wBAAT,CAAkCC,GAAlC,CAAuCC,GAAvC,CAA4Cd,KAA5C,CAAmD,CACtD,GAAIS,OAAO,CAACI,GAAD,CAAMb,KAAN,CAAP,CAAoBI,KAApB,GAA8BK,OAAO,CAACK,GAAD,CAAMd,KAAN,CAAP,CAAoBI,KAAtD,CAA6D,CACzD,MAAO,KAAP,CACH,CAFD,IAEO,CACH,MAAO,MAAP,CACH,CACJ","sourcesContent":["export const MAX_PAIRS = 10;\n\nexport function generateCardSet(numPairs) {\n    //\n    // Generate a set of cards with image pairs\n    //\n    const cards = [];\n    let id = 1;\n    for (let i = 1; i <= numPairs; i++) {\n        const card1 = {\n            id: id,\n            image: i,\n            imageUp: false,\n            matched: false\n        };\n        id++;\n        const card2 = {\n            id: id,\n            image: i,\n            imageUp: false,\n            matched: false\n        };\n        cards.push(card1);\n        cards.push(card2);\n        id++;\n    }\n\n    return cards;\n};\n\nexport function getCard(id, cards) {\n    return cards.find(c => c.id === id)\n}\n\nexport function cardsHaveIdenticalImages(id1, id2, cards) {\n    if (getCard(id1, cards).image === getCard(id2, cards).image) {\n        return true;\n    } else {\n        return false;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}