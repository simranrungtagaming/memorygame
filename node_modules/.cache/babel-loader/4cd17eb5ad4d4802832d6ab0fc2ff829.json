{"ast":null,"code":"export const MAX_PAIRS = 10;\nexport function generateCardSet(numPairs) {\n  //\n  // Generate a set of cards with image pairs\n  //\n  const cards = [];\n  let id = 1;\n\n  for (let i = 1; i <= numPairs; i++) {\n    const card1 = {\n      id: id,\n      image: i,\n      imageUp: false,\n      matched: false\n    };\n    id++;\n    const card2 = {\n      id: id,\n      image: i,\n      imageUp: false,\n      matched: false\n    };\n    cards.push(card1);\n    cards.push(card2);\n    id++;\n  }\n\n  return cards;\n}\n;\nexport function getCard(id, cards) {\n  return cards.find(c => c.id === id);\n}\nexport function cardsHaveIdenticalImages(id1, id2, cards) {\n  if (getCard(id1, cards).image === getCard(id2, cards).image) {\n    return true;\n  } else {\n    return false;\n  }\n}","map":{"version":3,"sources":["E:/CodingProjects/game/react-redux-memory-game-master/src/cardFunctions.js"],"names":["MAX_PAIRS","generateCardSet","numPairs","cards","id","i","card1","image","imageUp","matched","card2","push","getCard","find","c","cardsHaveIdenticalImages","id1","id2"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,EAAlB;AAEP,OAAO,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACtC;AACA;AACA;AACA,QAAMC,KAAK,GAAG,EAAd;AACA,MAAIC,EAAE,GAAG,CAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,QAArB,EAA+BG,CAAC,EAAhC,EAAoC;AAChC,UAAMC,KAAK,GAAG;AACVF,MAAAA,EAAE,EAAEA,EADM;AAEVG,MAAAA,KAAK,EAAEF,CAFG;AAGVG,MAAAA,OAAO,EAAE,KAHC;AAIVC,MAAAA,OAAO,EAAE;AAJC,KAAd;AAMAL,IAAAA,EAAE;AACF,UAAMM,KAAK,GAAG;AACVN,MAAAA,EAAE,EAAEA,EADM;AAEVG,MAAAA,KAAK,EAAEF,CAFG;AAGVG,MAAAA,OAAO,EAAE,KAHC;AAIVC,MAAAA,OAAO,EAAE;AAJC,KAAd;AAMAN,IAAAA,KAAK,CAACQ,IAAN,CAAWL,KAAX;AACAH,IAAAA,KAAK,CAACQ,IAAN,CAAWD,KAAX;AACAN,IAAAA,EAAE;AACL;;AAED,SAAOD,KAAP;AACH;AAAA;AAED,OAAO,SAASS,OAAT,CAAiBR,EAAjB,EAAqBD,KAArB,EAA4B;AAC/B,SAAOA,KAAK,CAACU,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACV,EAAF,KAASA,EAAzB,CAAP;AACH;AAED,OAAO,SAASW,wBAAT,CAAkCC,GAAlC,EAAuCC,GAAvC,EAA4Cd,KAA5C,EAAmD;AACtD,MAAIS,OAAO,CAACI,GAAD,EAAMb,KAAN,CAAP,CAAoBI,KAApB,KAA8BK,OAAO,CAACK,GAAD,EAAMd,KAAN,CAAP,CAAoBI,KAAtD,EAA6D;AACzD,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ","sourcesContent":["export const MAX_PAIRS = 10;\n\nexport function generateCardSet(numPairs) {\n    //\n    // Generate a set of cards with image pairs\n    //\n    const cards = [];\n    let id = 1;\n    for (let i = 1; i <= numPairs; i++) {\n        const card1 = {\n            id: id,\n            image: i,\n            imageUp: false,\n            matched: false\n        };\n        id++;\n        const card2 = {\n            id: id,\n            image: i,\n            imageUp: false,\n            matched: false\n        };\n        cards.push(card1);\n        cards.push(card2);\n        id++;\n    }\n\n    return cards;\n};\n\nexport function getCard(id, cards) {\n    return cards.find(c => c.id === id)\n}\n\nexport function cardsHaveIdenticalImages(id1, id2, cards) {\n    if (getCard(id1, cards).image === getCard(id2, cards).image) {\n        return true;\n    } else {\n        return false;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}